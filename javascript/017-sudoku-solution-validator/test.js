const { assert } = require("chai");
const validSolution = require("./solution");

describe("Tests", () => {
  it("test", () => {
    assert.strictEqual(
      validSolution([
        [5, 3, 4, 6, 7, 8, 9, 1, 2],
        [6, 7, 2, 1, 9, 5, 3, 4, 8],
        [1, 9, 8, 3, 4, 2, 5, 6, 7],
        [8, 5, 9, 7, 6, 1, 4, 2, 3],
        [4, 2, 6, 8, 5, 3, 7, 9, 1],
        [7, 1, 3, 9, 2, 4, 8, 5, 6],
        [9, 6, 1, 5, 3, 7, 2, 8, 4],
        [2, 8, 7, 4, 1, 9, 6, 3, 5],
        [3, 4, 5, 2, 8, 6, 1, 7, 9],
      ]),
      true
    );

    assert.strictEqual(
      validSolution([
        [5, 3, 4, 6, 7, 8, 9, 1, 2],
        [6, 7, 2, 1, 9, 0, 3, 4, 8],
        [1, 0, 0, 3, 4, 2, 5, 6, 0],
        [8, 5, 9, 7, 6, 1, 0, 2, 0],
        [4, 2, 6, 8, 5, 3, 7, 9, 1],
        [7, 1, 3, 9, 2, 4, 8, 5, 6],
        [9, 0, 1, 5, 3, 7, 2, 1, 4],
        [2, 8, 7, 4, 1, 9, 6, 3, 5],
        [3, 0, 0, 4, 8, 1, 1, 7, 9],
      ]),
      false
    );

    assert.strictEqual(
      validSolution([
        [1, 2, 6, 3, 4, 7, 5, 9, 8],
        [7, 3, 5, 8, 1, 9, 6, 4, 2],
        [1, 9, 4, 2, 7, 5, 8, 6, 3],
        [3, 1, 7, 5, 8, 4, 2, 6, 9],
        [7, 5, 9, 1, 6, 2, 4, 3, 8],
        [4, 8, 2, 9, 3, 6, 7, 1, 5],
        [1, 4, 8, 7, 5, 9, 3, 2, 6],
        [5, 6, 1, 4, 2, 3, 9, 8, 7],
        [2, 7, 3, 6, 9, 1, 8, 5, 4],
      ]),
      false
    );
  });
});
